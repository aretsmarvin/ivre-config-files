#-------------------------------------------------------------------------README-------------------------------------------------------------------------------------------#

# IVRE is a network recon framework that does not perform any scanning by itself. It is not a scanner. However, it uses other scanning tools such as Nmap to do the scanning. 
# Usually one would manually configure Nmap and run the neccesary scans, but this is not practical and using Nmap scan templates makes life easier. After scanning is 
# performed the scan results are passed on to IVRE which then can visualise the results. This is much easier than digging through Nmap output files manually. Especially
# with thousands and thousands of hosts. Nmap does the scanning, IVRE does the visualisations. 

# Nmap scan templates are used by IVRE to pass instructions on to Nmap. By default IVRE uses a default template, but one can use their own template.
# Note that there are sometimes empty options e.g. pings="", but these still need to be defined in order to override the default IVRE template
# An example of such template with explanation:

# NMAP_SCAN_TEMPLATES["http"] = dict( 	     # name of the template, in this case a http scan
#	pings = "", 		     	     # no pings are performed, we do not want to ping hosts for performance reasons
#	osdetect = "",			     # no os detection is performed, this is done seperately 
#	traceroute = "",		     # tracing hops is also unneccsary
#	scans = "SV",			     # this turns on -sS and -sV in nmap, -sS is a stealth tcp syn scan. -sV scans for what kind of service is running
#	extra_options = MAIN_ARGS + ["-Pn", "-n", "--excludefile", "/home/ubuntu/exlude.txt"],    # -Pn treats all hosts as online, -n disables dns resolution, excludefile for blacklisting
#	scripts_force = ["default","http-headers", "http-auth-finder","http-git", "http-default-accounts", "http-csrf", "http-methods", "http-rfi-spider", "http-security-#headers"], 				      # this is a list of scripts that are ran, "default" enables many many nmap scripts: https://nmap.org/nsedoc/categories/default.html
#	ports = "80, 443", 		    # which ports we want to scan

# There is a PortScan.sh bash script which is a script that automatically detects all of the available templates in this file and then runs Masscan/Zmap, passes 
# the results to Nmap and the results are imported in IVRE for viewing purposes. Along with this there is also a PortScanAllTCP.sh bash script that runs all TCP scans.
# It runs all TCP scans and not UDP scans because Zmap is still a bit buggy and requires more manual interference. 

#-------------------------------------------------------------------------README-------------------------------------------------------------------------------------------#

WEB_GET_NOTEPAD_PAGES = "localdokuwiki"
MAIN_ARGS = ["-host-timeout", "30"]
EXCLUDE_FILE = "/home/ubuntu/exlude.txt"

NMAP_SCAN_TEMPLATES["service"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["-Pn", "-n", "-T4", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["vulners", "default","unusual-port"],
	ports = "1,3,7,9,13,17,19-26,33,37,42,53,79-82,88,100,106,110-111,113,119,135,139,143-144,161,179,199,222,254-255,264,280,311,389,407,427,443-445,464-465,497,500,512-515,543-544,548,554,563,587,593,625,631,636,646,787,808,873,888,902,990,992-993,995,999-1000,1022-1044,1048-1050,1053-1054,1056,1058-1059,1064-1066,1068-1069,1071,1074,1080,1110-1111,1218,1234,1352,1433,1494,1521,1700,1717,1720,1723,1755,1761,1801,1900,1935,1998,2000-2010,2049,2065,2103,2105,2107,2121,2161,2301,2375,2376,2383,2401,2601-2602,2701,2717,2869,2967,3000-3001,3052,3128,3260,3268-3269,3306,3389,3689-3690,3703,3986,4000-4001,4045,4444,4662,4899,5000-5001,5003,5009,5050-5051,5060,5101,5120,5190,5357,5432,5550,5555,5631,5666,5800-5801,5900-5901,6000-6002,6004,6112,6543,6646,6666,7000-7001,7019,7070,7100,7937-7938,8000,8002,8008-8010,8020,8031,8080-8082,8443,8888,9000-9001,9090,9100,9102,9999-10001,10010,15000,27017,27018,27019,32768,32770-32772,42510,49152-49157,50000-50001" 
)

NMAP_SCAN_TEMPLATES["os"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "",
	extra_options = MAIN_ARGS + ["-T4","-O", "--osscan-limit","-n", "-Pn", "--excludefile", EXCLUDE_FILE]
)

NMAP_SCAN_TEMPLATES["ike"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "UV",
	extra_options = MAIN_ARGS + ["-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["default", "ike-version"],
	ports = "500"
)

NMAP_SCAN_TEMPLATES["rdp"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["--host-timeout", "60m", "-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["rdp-enum-encryption", "rdp-vuln-ms12-020", "rdp-ntlm-info", "default"],
	ports = "3389",
)

NMAP_SCAN_TEMPLATES["test-ssl"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["test-ssl"],
	ports = "443"
)

NMAP_SCAN_TEMPLATES["nuclei"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["-Pn", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["nuclei"],
	ports = "80,443"
)

NMAP_SCAN_TEMPLATES["http"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["-Pn", "--excludefile", EXCLUDE_FILE], 
	scripts_force = ["default","http-headers", "http-auth-finder","http-git", "http-default-accounts", "http-csrf", "http-methods", "http-rfi-spider", "http-security-headers"],
	ports = "80, 443",
)

NMAP_SCAN_TEMPLATES["whatweb"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["-Pn","--excludefile", EXCLUDE_FILE],
	scripts_force = ["whatweb"],
	ports = "80,443"
)


NMAP_SCAN_TEMPLATES["ftp"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV", 
	extra_options = MAIN_ARGS + ["-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["default","ftp-anon", "ftp-syst", "ftp-bounce"],
	ports = "21"
)

NMAP_SCAN_TEMPLATES["ssh"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["--script-args", "ssh_hostkey=full","-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["default","ssh-hostkey", "ssh2-enum-algos", "ssh-auth-methods"],
	ports = "22"
)

NMAP_SCAN_TEMPLATES["ssh-audit"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["ssh-audit"],
	ports = "22"
)


NMAP_SCAN_TEMPLATES["samba"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["--excludefile", EXCLUDE_FILE],
	scripts_force = ["default","smb-ls", "smb-enum-shares", "smb-protocols", "smb-os-discovery"],
	ports = "139,445"
)

NMAP_SCAN_TEMPLATES["mysql"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["--excludefile", EXCLUDE_FILE],
	scripts_force = ["default","mysql-empty-password","mysql-info"],
	ports = "3306"
)

NMAP_SCAN_TEMPLATES["nfs"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["-Pn","--excludefile", EXCLUDE_FILE],
	scripts_force = ["default","rpcinfo", "nfs-showmount", "nfs-ls"],
	ports = "111,2049"
)

NMAP_SCAN_TEMPLATES["smtp"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV", 
	extra_options = MAIN_ARGS + ["--excludefile", EXCLUDE_FILE],
	scripts_force = ["default","smtp-open-relay","smtp-ntlm-info","smtp-commands"],
	ports = "25,465,587"
)

NMAP_SCAN_TEMPLATES["mongodb"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["--scan-delay", "1000ms","-Pn","-O", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["default"],
	ports = "27017,27018,27019"
)

NMAP_SCAN_TEMPLATES["vnc"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["-n", "-Pn", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["realvnc-auth-bypass","default"],
	ports = "5800,5801,5900,5901"
)

NMAP_SCAN_TEMPLATES["mssql"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["-n", "-Pn", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["default","ms-sql-info","ms-sql-empty-password","ms-sql-ntlm-info"],
	ports = "445,1433"
)

NMAP_SCAN_TEMPLATES["httpProxy"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["-Pn", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["http-open-proxy", "default"],
	ports = "8080" 
)

NMAP_SCAN_TEMPLATES["socksProxy"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["-n","-Pn", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["socks-open-proxy","default"],
	ports = "1080"
)


NMAP_SCAN_TEMPLATES["nntp"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["-n","-Pn", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["default","nntp-ntlm-info"],
	ports = "119,433,563"
)

NMAP_SCAN_TEMPLATES["telnet"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["telnet-encryption", "telnet-ntlm-info", "default"],
	ports = "23"
)

NMAP_SCAN_TEMPLATES["pop"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["pop3-ntlm-info", "pop3-capabilities", "default"],
	ports = "110,995"
)

NMAP_SCAN_TEMPLATES["afp"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["afp-ls", "afp-path-vuln", "afp-serverinfo", "afp-showmount", "default"],
	ports = "548"
)

NMAP_SCAN_TEMPLATES["iscsi"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["iscsi-info", "default"],
	ports = "3260"
)


NMAP_SCAN_TEMPLATES["amqp"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["amqp-info", "default"],
	ports = "5671, 5672"
)

NMAP_SCAN_TEMPLATES["couchdb"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["couchdb-stats", "default"],
	ports = "5984, 6984"
)

NMAP_SCAN_TEMPLATES["redis"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["redis-info", "default"],
	ports = "6379"
)

NMAP_SCAN_TEMPLATES["ajp"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["ajp-auth", "ajp-headers", "ajp-methods", "ajp-request", "default"],
	ports = "8009"
)

NMAP_SCAN_TEMPLATES["cassandra"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["cassandra-info", "default"],
	ports = "9042,9160",
)

NMAP_SCAN_TEMPLATES["memcache"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["memcached-info", "default"],
	ports = "11211"
)

NMAP_SCAN_TEMPLATES["ethernet"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["enip-info", "default"],
	ports = "44818"
)

NMAP_SCAN_TEMPLATES["open"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "UV",
	extra_options = MAIN_ARGS + ["-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["default"],
	ports = "1194"
)

NMAP_SCAN_TEMPLATES["mdns"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "UV",
	extra_options = MAIN_ARGS + ["-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["default", "dns-service-discovery"],
	ports = "5353"
)

NMAP_SCAN_TEMPLATES["ard"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "UV",
	extra_options = MAIN_ARGS + ["-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["default", "vnc-info", "realvnc-auth-bypass"],
	ports = "3283"
)

NMAP_SCAN_TEMPLATES["netbios"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "UV",
	extra_options = MAIN_ARGS + ["-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["default", "nbstat"],
	ports = "137"
)

NMAP_SCAN_TEMPLATES["snmp-info"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "UV",
	extra_options = MAIN_ARGS + ["-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["default"],
	ports = "161"
)

NMAP_SCAN_TEMPLATES ["ssdp-upnp"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "UV",
	extra_options = MAIN_ARGS + ["-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["default"],
	ports = "1900"
)

NMAP_SCAN_TEMPLATES ["tftp"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "UV",
	extra_options = MAIN_ARGS + ["-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["default"],
	ports = "69"
)

NMAP_SCAN_TEMPLATES["ntp"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "UV",
	extra_options = MAIN_ARGS + ["-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["default"],
	ports  = "123"
)

NMAP_SCAN_TEMPLATES["http8008"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV", 
	extra_options = MAIN_ARGS + ["-Pn", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["default"],
	ports = "8008"
)

NMAP_SCAN_TEMPLATES["dns-udp"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "UV",
	extra_options = MAIN_ARGS + ["-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["default", "dns-recursion"],
	ports = "53" 	
)

NMAP_SCAN_TEMPLATES["dns-tcp"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["default", "dns-recursion"],
	ports = "53"
)

	
NMAP_SCAN_TEMPLATES["erlang"] = dict(
	pings = "",
	osdetect = "",
	traceroute = "",
	scans = "SV",
	extra_options = MAIN_ARGS + ["-Pn", "-n", "--excludefile", EXCLUDE_FILE],
	scripts_force = ["default"],
	ports = "4369"
) 

DEBUG = True
